[{"line":1,"elements":[{"start_timestamp":"2023-08-12T12:37:18.448Z","line":12,"name":"Check the borrowing estimate based on income and expenses","description":"","id":"testing-the-borrowing-calculator;check-the-borrowing-estimate-based-on-income-and-expenses;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":10093812100,"status":"passed"},"line":4,"name":"user navigates to the calculator page","match":{"location":"stepDefinitions.calculatorSteps.user_navigates_to_the_calculator_page()"},"keyword":"Given "},{"result":{"duration":842884400,"status":"passed"},"line":5,"name":"user enters 80000,10000,500,0,100,0 and 10000","match":{"arguments":[{"val":"80000","offset":12},{"val":"10000","offset":18},{"val":"500","offset":24},{"val":"0","offset":28},{"val":"100","offset":30},{"val":"0","offset":34},{"val":"10000","offset":40}],"location":"stepDefinitions.calculatorSteps.user_enters_annualincome_livingexpenses_homeloanrepayments_otherloanrepayments_othercommitments_and_creditcardlimits(int,int,int,int,int,int,int)"},"keyword":"When "},{"result":{"duration":137539400,"status":"passed"},"line":6,"name":"clicks on the borrow estimate button","match":{"location":"stepDefinitions.calculatorSteps.clicks_on_the_borrow_estimate_button()"},"keyword":"And "},{"result":{"error_message":"org.junit.ComparisonFailure: expected:<$4[82],000> but was:<$4[26],000>\r\n\tat org.junit.Assert.assertEquals(Assert.java:117)\r\n\tat org.junit.Assert.assertEquals(Assert.java:146)\r\n\tat stepDefinitions.calculatorSteps.the_borrowing_estimate_should_be_as_expected(calculatorSteps.java:53)\r\n\tat ✽.the borrowing estimate should be as expected(file:///C:/Users/shravyad/eclipse-workspace/CucumberFramework/src/test/java/features/borrowingEstimate.feature:7)\r\n","duration":3073605900,"status":"failed"},"line":7,"name":"the borrowing estimate should be as expected","match":{"location":"stepDefinitions.calculatorSteps.the_borrowing_estimate_should_be_as_expected()"},"keyword":"Then "},{"result":{"duration":1109400,"status":"skipped"},"line":8,"name":"clicking the start over button should clear the form","match":{"location":"stepDefinitions.calculatorSteps.clicking_the_start_over_button_should_clear_the_form()"},"keyword":"And "}]},{"start_timestamp":"2023-08-12T12:37:32.708Z","line":13,"name":"Check the borrowing estimate based on income and expenses","description":"","id":"testing-the-borrowing-calculator;check-the-borrowing-estimate-based-on-income-and-expenses;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":9385180400,"status":"passed"},"line":4,"name":"user navigates to the calculator page","match":{"location":"stepDefinitions.calculatorSteps.user_navigates_to_the_calculator_page()"},"keyword":"Given "},{"result":{"duration":1195889500,"status":"passed"},"line":5,"name":"user enters 80000,21000,500,0,50,0 and 10000","match":{"arguments":[{"val":"80000","offset":12},{"val":"21000","offset":18},{"val":"500","offset":24},{"val":"0","offset":28},{"val":"50","offset":30},{"val":"0","offset":33},{"val":"10000","offset":39}],"location":"stepDefinitions.calculatorSteps.user_enters_annualincome_livingexpenses_homeloanrepayments_otherloanrepayments_othercommitments_and_creditcardlimits(int,int,int,int,int,int,int)"},"keyword":"When "},{"result":{"duration":215837200,"status":"passed"},"line":6,"name":"clicks on the borrow estimate button","match":{"location":"stepDefinitions.calculatorSteps.clicks_on_the_borrow_estimate_button()"},"keyword":"And "},{"result":{"duration":3040487000,"status":"passed"},"line":7,"name":"the borrowing estimate should be as expected","match":{"location":"stepDefinitions.calculatorSteps.the_borrowing_estimate_should_be_as_expected()"},"keyword":"Then "},{"result":{"duration":761461000,"status":"passed"},"line":8,"name":"clicking the start over button should clear the form","match":{"location":"stepDefinitions.calculatorSteps.clicking_the_start_over_button_should_clear_the_form()"},"keyword":"And "}]}],"name":"Testing the borrowing calculator","description":"","id":"testing-the-borrowing-calculator","keyword":"Feature","uri":"file:src/test/java/features/borrowingEstimate.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2023-08-12T12:37:47.357Z","line":3,"name":"Verify register station API without API Key throws error negative test","description":"","id":"validating-weather-station-apis;verify-register-station-api-without-api-key-throws-error-negative-test","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1110234700,"status":"passed"},"line":4,"name":"weather station API endpoint","match":{"location":"stepDefinitions.weatherStationSteps.weather_station_api_endpoint()"},"keyword":"Given "},{"result":{"duration":2606804800,"status":"passed"},"line":5,"name":"user calls registerStationAPI with post http request","match":{"location":"stepDefinitions.weatherStationSteps.user_calls_register_station_api_with_post_http_request()"},"keyword":"When "},{"result":{"duration":51856500,"status":"passed"},"line":6,"name":"the API call should give status code 401","match":{"arguments":[{"val":"401","offset":37}],"location":"stepDefinitions.weatherStationSteps.the_api_call_should_give_status_code(int)"},"keyword":"Then "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nResponse body doesn't match expectation.\nExpected: \"{\\\"code\\\": 401,\\\"message\\\": \\\"Invalid API key. Please see http://openweathermap.org/faq#error401 for more info.\\\"}\"\n  Actual: {\"cod\":401, \"message\": \"Invalid API key. Please see https://openweathermap.org/faq#error401 for more info.\"}\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)\r\n\tat stepDefinitions.weatherStationSteps.the_test_fail_to_match_the_expected_message(weatherStationSteps.java:47)\r\n\tat ✽.the test fail to match the expected message(file:///C:/Users/shravyad/eclipse-workspace/CucumberFramework/src/test/java/features/weatherMap.feature:7)\r\n","duration":92265500,"status":"failed"},"line":7,"name":"the test fail to match the expected message","match":{"location":"stepDefinitions.weatherStationSteps.the_test_fail_to_match_the_expected_message()"},"keyword":"And "}]},{"start_timestamp":"2023-08-12T12:37:51.253Z","line":9,"name":"Verify register station API without API Key throws error","description":"","id":"validating-weather-station-apis;verify-register-station-api-without-api-key-throws-error","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":10,"name":"weather station API endpoint","match":{"location":"stepDefinitions.weatherStationSteps.weather_station_api_endpoint()"},"keyword":"Given "},{"result":{"duration":508232100,"status":"passed"},"line":11,"name":"user calls registerStationAPI with post http request","match":{"location":"stepDefinitions.weatherStationSteps.user_calls_register_station_api_with_post_http_request()"},"keyword":"When "},{"result":{"duration":2845000,"status":"passed"},"line":12,"name":"the API call should give status code 401","match":{"arguments":[{"val":"401","offset":37}],"location":"stepDefinitions.weatherStationSteps.the_api_call_should_give_status_code(int)"},"keyword":"Then "},{"result":{"duration":5455000,"status":"passed"},"line":13,"name":"the response message body should match the expected message","match":{"location":"stepDefinitions.weatherStationSteps.the_response_message_body_should_match_the_expected_message()"},"keyword":"And "}]},{"start_timestamp":"2023-08-12T12:37:51.788Z","line":22,"name":"Register two weather stations","description":"","id":"validating-weather-station-apis;register-two-weather-stations;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1090600,"status":"passed"},"line":16,"name":"weather station API endpoint","match":{"location":"stepDefinitions.weatherStationSteps.weather_station_api_endpoint()"},"keyword":"Given "},{"result":{"duration":915029400,"status":"passed"},"line":17,"name":"a request is made to register a weather station with details DEMO_TEST001,Team Demo Test Station 001,33.33,-122.43 and 222","match":{"arguments":[{"val":"DEMO_TEST001","offset":61},{"val":"Team Demo Test Station 001","offset":74},{"val":"33.33","offset":101},{"val":"-122.43","offset":107},{"val":"222","offset":119}],"location":"stepDefinitions.weatherStationSteps.a_request_is_made_to_register_a_weather_station_with_details(java.lang.String,java.lang.String,double,double,int)"},"keyword":"When "},{"result":{"duration":2426400,"status":"passed"},"line":18,"name":"the API call should give status code 201","match":{"arguments":[{"val":"201","offset":37}],"location":"stepDefinitions.weatherStationSteps.the_api_call_should_give_status_code(int)"},"keyword":"Then "}]},{"start_timestamp":"2023-08-12T12:37:52.722Z","line":23,"name":"Register two weather stations","description":"","id":"validating-weather-station-apis;register-two-weather-stations;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":16,"name":"weather station API endpoint","match":{"location":"stepDefinitions.weatherStationSteps.weather_station_api_endpoint()"},"keyword":"Given "},{"result":{"duration":902928600,"status":"passed"},"line":17,"name":"a request is made to register a weather station with details DEMO_TEST002,Team Demo Test Station 002,44.44,-122.44 and 111","match":{"arguments":[{"val":"DEMO_TEST002","offset":61},{"val":"Team Demo Test Station 002","offset":74},{"val":"44.44","offset":101},{"val":"-122.44","offset":107},{"val":"111","offset":119}],"location":"stepDefinitions.weatherStationSteps.a_request_is_made_to_register_a_weather_station_with_details(java.lang.String,java.lang.String,double,double,int)"},"keyword":"When "},{"result":{"duration":2509100,"status":"passed"},"line":18,"name":"the API call should give status code 201","match":{"arguments":[{"val":"201","offset":37}],"location":"stepDefinitions.weatherStationSteps.the_api_call_should_give_status_code(int)"},"keyword":"Then "}]},{"start_timestamp":"2023-08-12T12:37:53.648Z","line":33,"name":"Get the details of registered stations","description":"","id":"validating-weather-station-apis;get-the-details-of-registered-stations;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":266400,"status":"passed"},"line":26,"name":"weather station API endpoint","match":{"location":"stepDefinitions.weatherStationSteps.weather_station_api_endpoint()"},"keyword":"Given "},{"result":{"duration":881666600,"status":"passed"},"line":27,"name":"a rquest is made to get all the registered stations","match":{"location":"stepDefinitions.weatherStationSteps.a_rquest_is_made_to_get_all_the_registered_stations()"},"keyword":"When "},{"result":{"duration":1860800,"status":"passed"},"line":28,"name":"the API call should give status code 200","match":{"arguments":[{"val":"200","offset":37}],"location":"stepDefinitions.weatherStationSteps.the_api_call_should_give_status_code(int)"},"keyword":"Then "},{"result":{"duration":1125083900,"status":"passed"},"line":29,"name":"the response should get the same details sent in registration request DEMO_TEST001 and Team Demo Test Station 001","match":{"arguments":[{"val":"DEMO_TEST001","offset":70},{"val":"Team Demo Test Station 001","offset":87}],"location":"stepDefinitions.weatherStationSteps.the_response_should_get_the_same_details_sent_in_registration_request(java.lang.String,java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2023-08-12T12:37:55.707Z","line":34,"name":"Get the details of registered stations","description":"","id":"validating-weather-station-apis;get-the-details-of-registered-stations;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":26,"name":"weather station API endpoint","match":{"location":"stepDefinitions.weatherStationSteps.weather_station_api_endpoint()"},"keyword":"Given "},{"result":{"duration":834665100,"status":"passed"},"line":27,"name":"a rquest is made to get all the registered stations","match":{"location":"stepDefinitions.weatherStationSteps.a_rquest_is_made_to_get_all_the_registered_stations()"},"keyword":"When "},{"result":{"duration":4499100,"status":"passed"},"line":28,"name":"the API call should give status code 200","match":{"arguments":[{"val":"200","offset":37}],"location":"stepDefinitions.weatherStationSteps.the_api_call_should_give_status_code(int)"},"keyword":"Then "},{"result":{"duration":79539900,"status":"passed"},"line":29,"name":"the response should get the same details sent in registration request DEMO_TEST002 and Team Demo Test Station 002","match":{"arguments":[{"val":"DEMO_TEST002","offset":70},{"val":"Team Demo Test Station 002","offset":87}],"location":"stepDefinitions.weatherStationSteps.the_response_should_get_the_same_details_sent_in_registration_request(java.lang.String,java.lang.String)"},"keyword":"And "}]}],"name":"Validating Weather Station APIs","description":"","id":"validating-weather-station-apis","keyword":"Feature","uri":"file:src/test/java/features/weatherMap.feature","tags":[]}]